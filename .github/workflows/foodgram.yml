name: foodgram workflow

on: [push]

jobs:

  tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Install dependencies
      run: | 
        # обновление pip
        python -m pip install --upgrade pip 
        # установка flake8 и его плагинов
        pip install flake8
        # установка зависимостей
        pip install -r backend/requirements.txt  
    - name: Test with flake8
      run: |
        # запуск проверки проекта по flake8
        python -m flake8

  build_and_push_to_docker_hub:
        name: Push Docker image to Docker Hub
        runs-on: ubuntu-latest
        steps:
          - name: Check out the repo
            uses: actions/checkout@v2 
          - name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v1 
          - name: Login to Docker 
            uses: docker/login-action@v1 
            with:
              username: ${{ secrets.DOCKERHUB_LOGIN }}
              password: ${{ secrets.DOCKERHUB_PASSWORD }}
          - name: Push to Docker Hub
            uses: docker/build-push-action@v2 
            with:
              context: backend/
              push: true
              tags: ${{ secrets.DOCKERHUB_LOGIN }}/foodgram_backend:latest
          - name: Push frontend
            uses: docker/build-push-action@v2 
            with:
              context: frontend/
              push: true
              tags: ${{ secrets.DOCKERHUB_LOGIN }}/foodgram_frontend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd Dev/foodgram/infra
            sudo docker-compose stop
            sudo docker-compose rm backend
            sudo docker image rm ${{ secrets.DOCKERHUB_LOGIN }}/foodgram_backend
            sudo docker image rm ${{ secrets.DOCKERHUB_LOGIN }}/foodgram_frontend
            rm -f .env
            touch .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            echo SECKET_KEY=${{ secrets.SECKET_KEY }} >> .env
            sudo docker pull ${{ secrets.DOCKERHUB_LOGIN }}/foodgram_backend:latest
            sudo docker pull ${{ secrets.DOCKERHUB_LOGIN }}/foodgram_frontend:latest
            sudo docker-compose up -d --build
            sudo docker-compose exec -T web python manage.py collectstatic --no-input
            sudo docker-compose exec -T web python manage.py makemigrations
            sudo docker-compose exec -T web python manage.py migrate

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} успешно выполнен!